  /* The Grid ---------------------- */

  .row { width: $rowWidth; max-width: 100%; min-width: $screenSmall; margin: 0 auto;
    .row { width: auto; max-width: none; min-width: 0; margin: 0 (-($columnGutter/2)); }

    &.collapse {
      .column, .columns { padding: 0; }
    }
    .row { width: auto; max-width: none; min-width: 0; margin: 0 (-($columnGutter/2));
      &.collapse { margin: 0; }
    }
  }

  .column, .columns { float: $defaultFloat; min-height: 1px; padding: 0 ($columnGutter/2); position: relative;
    &.centered { float: none; margin: 0 auto; }
  }

  [class*="column"] + [class*="column"]:last-child { float: $defaultOpposite; }
  [class*="column"] + [class*="column"].end { float: $defaultFloat; }

  // Creating column classes
  @for $i from 1 through $totalColumns {
    .#{convert-number-to-word($i)} { width: gridCalc($i, $totalColumns); }
  }

  // Creating .row-# classes
  @for $i from 1 through $totalColumns {
    .row {
      .#{convert-number-to-word($i)} { @extend .#{convert-number-to-word($i)}; }
    }
  }

  // Creating .row .offset-by-# classes
  @for $i from 1 through $totalColumns - 2 {
    .row {
      .offset-by-#{convert-number-to-word($i)} { margin-#{$defaultFloat}: gridCalc($i, $totalColumns); }
    }
  }

  // Creating .row .push-# classes
  @for $i from 2 through $totalColumns - 2 {
    .push-#{convert-number-to-word($i)} { #{$defaultFloat}: gridCalc($i, $totalColumns); }
    .pull-#{convert-number-to-word($i)} { #{$defaultOpposite}: gridCalc($i, $totalColumns); }
  }

  img, object, embed { max-width: 100%; height: auto; }
  object, embed { height: 100%; }
  img { -ms-interpolation-mode: bicubic; }
  #map_canvas img, .map_canvas img {max-width: none!important;}

  /* Nicolas Gallagher's micro clearfix */
  .row { @include clearfix(); }

/* Block Grids ---------------------- */

/* These are 2-up, 3-up, 4-up and 5-up ULs, suited
for repeating blocks of content. Add 'mobile' to
them to switch them just like the layout grid
(one item per line) on phones

For IE7/8 compatibility block-grid items need to be
the same height. You can optionally uncomment the
lines below to support arbitrary height, but know
that IE7/8 do not support :nth-child.
-------------------------------------------------- */

  .block-grid { display: block; overflow: hidden; padding: 0;

    &>li { display: block; height: auto; float: $defaultFloat; }
    &.one-up { margin: 0;
      &>li { width: 100%; padding: 0 0 15px; }
    }

    &.two-up { margin: 0 -15px;
      &>li { width: 50%; padding: 0 15px 15px;
        &:nth-child(2n+1) { clear: both; }
      }
    }

    &.three-up { margin: 0 -12px;
      &>li { width: 33.33%; padding: 0 12px 12px;
        &:nth-child(3n+1) { clear: both; }
      }
    }

    &.four-up { margin: 0 -10px;
      &>li { width: 25%; padding: 0 10px 10px;
        &:nth-child(4n+1) { clear: both; }
      }
    }

    &.five-up { margin: 0 -8px;
      &>li { width: 20%; padding: 0 8px 8px;
        &:nth-child(5n+1) { clear: both; }
      }
    }
    &.six-up { margin: 0 -15px;
      &>li { width: 16.6%; padding: 0 8px 8px;
        &:nth-child(6n+1) { clear: both; }
      }
    }
    &.seven-up { margin: 0 -15px;
      &>li { width: 14.28%; padding: 0 8px 8px;
        &:nth-child(7n+1) { clear: both; }
      }
    }
    &.eight-up { margin: 0 -15px;
      &>li { width: 12.5%; padding: 0 8px 8px;
        &:nth-child(8n+1) { clear: both; }
      }
    }
    &.nine-up { margin: 0 -15px;
      &>li { width: 11.11%; padding: 0 8px 8px;
        &:nth-child(9n+1) { clear: both; }
      }
    }
    &.ten-up { margin: 0 -15px;
      &>li { width: 10%; padding: 0 8px 8px;
        &:nth-child(10n+1) { clear: both; }
      }
    }
    &.eleven-up { margin: 0 -15px;
      &>li { width: 9.09%; padding: 0 8px 8px;
        &:nth-child(11n+1) { clear: both; }
      }
    }
    &.twelve-up { margin: 0 -15px;
      &>li { width: 8.33%; padding: 0 8px 8px;
        &:nth-child(12n+1) { clear: both; }
      }
    }
  }
