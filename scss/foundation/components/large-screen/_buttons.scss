/* Styles for screens that are atleast 768px; */
@media only screen and (min-width: emCalc(768px)) {
	
	/* Large Screen Buttons ---------------------- */

  .button { 
    
    display: inline-block!important;
    
    /* Sizes */
    &.large { 
    	font-size: ms(1); 
    	padding: ($largeBtnBase) ($largeBtnBase * 2) ($largeBtnBase + 1); 
    }
    &.medium { font-size: ms(0); }
    &.small { 
    	font-size: ms(0) - 3; 
    	padding: ($smallBtnBase) ($smallBtnBase * 2) ($smallBtnBase + 1); 
    }
    &.tiny { 
    	font-size: ms(0) - 4; 
    	padding: ($tinyBtnBase) ($tinyBtnBase * 2) ($tinyBtnBase + 1); 
    }
    &.expand { 
    	width: 100%; 
    	text-align: center; 
    }

    /* Layout */
    &.full-width { 
    	width: 100%; 
    	text-align: center; 
    	padding-#{$defaultFloat}: 0px !important; padding-#{$defaultOpposite}: 0px !important; 
    	}
    &.left-align { text-align: left; text-indent: 12px; }

		
	}

/* Buttons with Dropdowns ---------------------- */

  .button.dropdown { 

    /* Sizes */
    &.large { padding-#{$defaultOpposite}: ($largeBtnBase * 2) * 2; }
    &.small { padding-#{$defaultOpposite}: ($smallBtnBase * 2) * 2; }
    &.tiny { padding-#{$defaultOpposite}: ($tinyBtnBase * 2) * 2; }
    
    &>a { 
    	color: $white; 
    	display: block; 
    	padding: $btnBase (($btnBase * 2.5) * 2) ($btnBase + 1) ($btnBase * 2); 
    	padding-#{$defaultFloat}: $btnBase * 2; 
    	padding-#{$defaultOpposite}: ($btnBase * 2.5) * 2; 
    	@include single-transition(background-color, .15s, ease-in-out);
      &:hover, &:focus { 
      	background-color: darken($mainColor, 10%); 
      }
    }
    &.large>a { 
    	padding: $largeBtnBase (($largeBtnBase * 2.5) * 2) ($largeBtnBase + 1) ($largeBtnBase * 2); 
    	padding-#{$defaultFloat}: $largeBtnBase * 2; 
    	padding-#{$defaultOpposite}: ($largeBtnBase * 2.5) * 2; 
    }
  	&.small>a { 
  		padding: $smallBtnBase (($smallBtnBase * 2.5) * 2) ($smallBtnBase + 1) ($smallBtnBase * 2); 
  		padding-#{$defaultFloat}: $smallBtnBase * 2; 
  		padding-#{$defaultOpposite}: ($smallBtnBase * 2.5) * 2; 
  	}
		&.tiny>a { 
			padding: $tinyBtnBase (($tinyBtnBase * 2.5) * 2) ($tinyBtnBase + 1) ($tinyBtnBase * 2); 
			padding-#{$defaultFloat}: $tinyBtnBase * 2; 
			padding-#{$defaultOpposite}: ($tinyBtnBase * 2.5) * 2; 
		}

      /* Triangle Spans */
      &.large span { width: $largeBtnBase * 3; }
      &.small span { width: $smallBtnBase * 3; }
      &.tiny span { width: $tinyBtnBase * 3; }

      &.large span:after { @include cssTriangle(7px, #fff, top); margin-top: -3px; margin-#{$defaultFloat}: -7px; }
      &.small span:after { @include cssTriangle(4px, #fff, top); margin-top: -1px; margin-#{$defaultFloat}: -4px; }
      &.tiny span:after { @include cssTriangle(3px, #fff, top); margin-top: -1px; margin-#{$defaultFloat}: -3px; }

    }
  
  /* Button Groups Sizes */
  .button-group {
	  &.large  { padding: ($largeBtnBase) ($largeBtnBase * 2) ($largeBtnBase + 1); }
    &.medium { padding: $btnBase ($btnBase * 2) ($btnBase + 1); }
    &.small  { padding: ($smallBtnBase) ($smallBtnBase * 2) ($smallBtnBase + 1); }
    &.tiny   { padding: ($tinyBtnBase) ($tinyBtnBase * 2) ($tinyBtnBase + 1); }
  }
	
	
	
	
}