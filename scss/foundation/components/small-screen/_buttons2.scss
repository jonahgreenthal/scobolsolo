@import "foundation/settings";

// Button Structure Variables
$btn-med: 10px !default;
$btn-tny: 5px !default;
$btn-sml: 7px !default;
$btn-lrg: 15px !default;
$btn-display: inline-block !default;

// Button Style Variables
$btn-txt-color: #fff !default;
$btn-txt-color-alt: #333 !default;
$btn-txt-med: ms(0, 14px) !default;
$btn-txt-tny: ms(0, 10px) !default;
$btn-txt-sml: ms(0, 11px) !default;
$btn-txt-lrg: ms(1, 14px) !default;
$btn-txt-weight: bold !default;
$btn-txt-align: center !default;
$btn-txt-indent: 12px !default;
$btn-function-factor: 10% !default;
$btn-brdr-width: 1px !default;
$btn-brdr-style: solid !default;
$btn-brdr-color: darken($primary-color, $btn-function-factor) !default;
$btn-edge-shine: 0 1px 0 rgba(#fff, .5) inset !default;
$btn-edge-shadow: 0 1px 0 rgba(#000, .2) inset !default;
$btn-trans-speed: .15s !default;
$btn-trans-ease: ease-in-out !default;
$btn-trans-delay: 0 !default;
$btn-disabled-opacity: 0.6 !default;
$btn-rad: 3px !default;


// We use this to quickly calculate the side padding on buttons
@function btnSidePad($btn-pad) {
  @return $btn-pad * 2;
}
@function btnBtmPad($btn-pad) {
  @return $btn-pad + 1;
}

// We use this to create a default button with no style applied to it
@mixin btn-base {
  border-style: $btn-brdr-style;
  border-width: $btn-brdr-width;
  cursor: pointer;
  display: $btn-display;
  font-family: inherit;
  font-weight: $btn-txt-weight;
  line-height: 1;
  margin: 0;
  position: relative;
  text-decoration: none;
  text-align: $btn-txt-align;
  @include transition(all $btn-trans-speed $btn-trans-ease $btn-trans-delay);
}

// We use this to add button size styles
@mixin btn-size($pad:$btn-med, $full-width:false) {

  @if $pad {
    padding-bottom: $pad;
    padding-top: $pad;
    padding-left: btnSidePad($pad);
    padding-right: btnSidePad($pad);
    width: auto;

    @if      $pad == $btn-med { font-size: $btn-txt-med; }
    @else if $pad == $btn-tny { font-size: $btn-txt-tny; }
    @else if $pad == $btn-sml { font-size: $btn-txt-sml; }
    @else if $pad == $btn-lrg { font-size: $btn-txt-lrg; }
  }

  @if $full-width {
    padding-bottom: $pad;
    padding-top: $pad;
    padding-left: 0px;
    padding-right: 0px;
    width: 100%;
  }
}

// We use this to add button color styles
@mixin btn-style($bg:$primary-color, $radius:false, $disabled:false, $edge:true) {

  @if $bg {
    background-color: $bg;
    border-color: darken($bg, $btn-function-factor);

    &:hover,
    &:focus { background-color: darken($bg, $btn-function-factor); }

    @if $bg == $secondary-color {
      color: $btn-txt-color-alt;
      &:hover,
      &:focus { color: $btn-txt-color-alt; }
    }
    @else {
      color: $btn-txt-color;
      &:hover,
      &:focus { color: $btn-txt-color; }
    }
  }

  @if $disabled {
    cursor: default;
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
    &:hover,
    &:focus {
      background-color: $bg;
      @include box-shadow(none); }
  }

  @if $radius == true { @include border-radius($btn-rad); }
  @else if $radius { @include border-radius($radius); }

  @if $edge == true { @include box-shadow($btn-edge-shine);
    &:active { @include box-shadow($btn-edge-shadow); }
  }

}

@mixin btn($pad:$btn-med, $bg:$primary-color, $radius:false, $edge:true, $full-width:false, $disabled:false) {
  @include btn-base;
  @include btn-size($pad, $full-width);
  @include btn-style($bg, $radius, $disabled, $edge);
}


/* Buttons */
.button { @include btn-base; @include btn-size; @include btn-style;

  // Button Sizes
  &.large  { @include btn-size($pad:$btn-lrg); }
  &.medium { @include btn-size; }
  &.small  { @include btn-size($pad:$btn-sml); }
  &.tiny   { @include btn-size($pad:$btn-tny); }
  &.expand { @include btn-size($pad:false, $full-width: true); }

  // Button Radii
  &.radius { @include btn-style($bg:false, $radius:true, $edge:false); }
  &.round  { @include btn-style($bg:false, $radius:1000px, $edge:false); }

  // Button Layout
  &.left-align  { text-align: left; }
  &.right-align { text-align: right; }

  // Button Styles
  &.secondary { @include btn-style($bg:$secondary-color, $edge:false); }
  &.success   { @include btn-style($bg:$success-color, $edge:false); }
  &.alert     { @include btn-style($bg:$alert-color, $edge:false); }

  // Disabled Buttons
  &.disabled, &[disabled] { @include btn-style($bg:$primary-color, $edge:false, $disabled:true);
    &.secondary { @include btn-style($bg:$secondary-color, $edge:false, $disabled:true); }
    &.success { @include btn-style($bg:$success-color, $edge:false, $disabled:true); }
    &.alert { @include btn-style($bg:$alert-color, $edge:false, $disabled:true); }
  }

}