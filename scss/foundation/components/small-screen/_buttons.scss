// Button Variables

$btnBase: 10px !default;
$btnTinyBase: 5px !default;
$btnSmallBase: 7px !default;
$btnLargeBase: 15px !default;
$btnFontColor: #fff !default;
$btnFontSize: ms(0, 14px) !default;
$btnTinyFontSize: ms(0, 10px) !default;
$btnSmallFontSize: ms(0, 11px) !default;
$btnLargeFontSize: ms(1, 14px) !default;
$btnTransitionSpeed: .15s !default;
$btnTransitionEase: ease-in-out !default;
$btnRadius: 3px !default;
$btnBorderWidth: 1px !default;
$btnBorderStyle: solid !default;
$btnAlignIndention: 12px !default;
$btnDisabledOpacity: 0.6 !default;
$btnShinyEdge: 0 1px 0 $shinyEdge inset !default;
$btnDarkEdge: 0 1px 0 $darkEdge inset !default;

// Button Functions
@function btnSidePad($btnSize) {
  @return $btnSize * 2;
}
@function btnBtmPad($btnSize) {
  @return $btnSize + 1;
}

// Placeholder Class for Shared Styles
%btnBaseStyles {
  border-width: $btnBorderWidth;
  border-style: $btnBorderStyle;
  cursor: pointer;
  font-family: inherit;
  font-weight: bold;
  line-height: 1;
  margin: 0;
  position: relative;
  text-decoration: none;
  width: auto;
  color: $btnFontColor;
  @include box-shadow($btnShinyEdge);
  @include single-transition(background-color, $btnTransitionSpeed, $btnTransitionEase);
  &:active { @include box-shadow($btnDarkEdge); }
}

// Primary Button Base
%btnPrimaryBase {
  background-color: $primaryColor;
  border-color: darken($primaryColor, 15%);
  &:hover,
  &:focus { color: $btnFontColor; background-color: darken($primaryColor, 10%); }
}
// Secondary Button Base
%btnSecondaryBase {
  background-color: $secondaryColor;
  border-color: darken($secondaryColor, 15%);
  color: #333;
  &:hover,
  &:focus { background-color: darken($secondaryColor, 10%); }
}
// Alert Button Base
%btnAlertBase {
  background-color: $alertColor;
  border-color: darken($alertColor, 15%);
  &:hover,
  &:focus { background-color: darken($alertColor, 10%); }
}
// Success Button Base
%btnSuccessBase {
  background-color: $successColor;
  border-color: darken($successColor, 15%);
  &:hover,
  &:focus { background-color: darken($successColor, 10%); }
}
// Extend Button Width
%btnExtendStyle {
  width: 100%;
  padding-left: 0px !important;
  padding-right: 0px !important;
}
// Disabled Button Base
%btnDisabledBase {
  opacity: $btnDisabledOpacity;
  cursor: default;
  @include box-shadow(none);
}
// Disabled Background Colors
%btnPrimaryDisabled { background-color: $primaryColor;
  &:hover,
  &:focus { background-color: $primaryColor; }
}
%btnSecondaryDisabled { background-color: $secondaryColor;
  &:hover,
  &:focus { background-color: $secondaryColor; }
}
%btnSuccessDisabled { background-color: $successColor;
  &:hover,
  &:focus { background-color: $successColor; }
}
%btnAlertDisabled { background-color: $alertColor;
  &:hover,
  &:focus { background-color: $alertColor; }
}

// Button Size Shared Styles
%btnTinyStyles {
  font-size: $btnTinyFontSize;
  padding: $btnTinyBase btnSidePad($btnTinyBase) btnBtmPad($btnTinyBase);
}
%btnSmallStyles {
  font-size: $btnSmallFontSize;
  padding: $btnSmallBase btnSidePad($btnSmallBase) btnBtmPad($btnSmallBase);
}
%btnMediumStyles {
  font-size: $btnFontSize;
  padding: $btnBase btnSidePad($btnBase) btnBtmPad($btnBase);
}
%btnLargeStyles {
  font-size: $btnLargeFontSize;
  padding: $btnLargeBase btnSidePad($btnLargeBase) btnBtmPad($btnLargeBase);
}

// Button Radii
%btnRadiusRound { @include border-radius($btnRadius); }
%btnRadiusPill { @include border-radius(1000px); }

// Button Text Alignment
%btnTextCenter { text-align: center; }
%btnTextLeft { text-align: left; text-indent: $btnAlignIndention; }
%btnTextRight { text-align: right; padding-right: $btnAlignIndention; }

// Button Display Property
%inlineBlock { display: inline-block; }
%block { display: block; }


// Button Mixin
@mixin button($color:primary, $size:medium, $expand:false, $radius:false, $align:center, $disabled:false, $display:inline-block) {

  // Shared styles
  @extend %btnBaseStyles;

  // $color options, defaults to primary, false will omit.
  @if $color == primary   { @extend %btnPrimaryBase; }
  @if $color == secondary { @extend %btnSecondaryBase; }
  @if $color == success   { @extend %btnSuccessBase; }
  @if $color == alert     { @extend %btnAlertBase; }

  // $size options, can do $size:false to omit these styles.
  // Available option: "tiny, small, medium, large";
  @if      $size == tiny   { @extend %btnTinyStyles; }
  @else if $size == small  { @extend %btnSmallStyles; }
  @else if $size == medium { @extend %btnMediumStyles; }
  @else if $size == large  { @extend %btnLargeStyles; }

  // "$size:expand" styles for full-width buttons
  @if $expand { @extend %btnExtendStyle; }

  // $radii options. This is automatically set to false for default square corner buttons.
  @if      $radius == round { @extend %btnRadiusRound; }
  @else if $radius == pill  { @extend %btnRadiusPill; }

  // $align options for text alignment in buttons, setting this to "false" omits the styles.
  // Available options: "center, left, right";
  @if      $align == center { @extend %btnTextCenter; }
  @else if $align == left   { @extend %btnTextLeft; }
  @else if $align == right  { @extend %btnTextRight; }

  // $disabled options, "false" by default
  @if $disabled { @extend %btnDisabledBase; }

  // $display options, set to "inline-block" by default. Can set to "false" to omit.
  // Available options: "inline-block, block";
  @if $display == inline-block { @extend %inlineBlock; }
  @else if $display == block { @extend %block; }

}


/* Buttons */
.button { @extend %btnBaseStyles; @extend %btnMediumStyles; @extend %btnPrimaryBase; @extend %inlineBlock; @extend %btnTextCenter;

  // Button Sizes
  &.large  { @extend %btnLargeStyles; }
  &.medium { @extend %btnMediumStyles; }
  &.small  { @extend %btnSmallStyles; }
  &.tiny   { @extend %btnTinyStyles; }
  &.expand { @extend %btnExtendStyle; }

  // Button Radii
  &.radius { @extend %btnRadiusRound; }
  &.round  { @extend %btnRadiusPill; }

  // Button Layout
  &.left-align  { @extend %btnTextLeft; }
  &.right-align { @extend %btnTextRight; }

  // Button Styles
  &.secondary { @extend %btnSecondaryBase; }
  &.success   { @extend %btnSuccessBase; }
  &.alert     { @extend %btnAlertBase; }

  // Disabled Buttons
  &.disabled, &[disabled] { @extend %btnDisabledBase; @extend %btnPrimaryDisabled;
    &.secondary { @extend %btnSecondaryDisabled; }
    &.success { @extend %btnSuccessDisabled; }
    &.alert { @extend %btnAlertDisabled; }
  }

}

/* Buttons with Dropdowns ---------------------- */

  .button.dropdown { position: relative; padding-#{$defaultOpposite}: (($btnBase + 12) * 2);

    /* Sizes */
    &.large { padding-#{$defaultOpposite}: ($btnLargeBase * 2) * 2; }
    &.small { padding-#{$defaultOpposite}: ($btnSmallBase * 2) * 2; }
    &.tiny { padding-#{$defaultOpposite}: ($btnTinyBase * 2) * 2; }

    /* Triangles */
    &:after { @include cssTriangle(6px, #fff, top); position: absolute; top: 50%; #{$defaultOpposite}: $btnBase * 2; margin-top: -2px; }
    &.large:after { @include cssTriangle(7px, #fff, top); margin-top: -3px; #{$defaultOpposite}: $btnLargeBase * 2; }
    &.small:after { @include cssTriangle(5px, #fff, top); margin-top: -2px; #{$defaultOpposite}: $btnSmallBase * 2; }
    &.tiny:after { @include cssTriangle(4px, #fff, top); margin-top: -1px; #{$defaultOpposite}: $btnTinyBase * 2; }

    /* Flyout List */
    &>ul { @include box-sizing(content-box); display: none; position: absolute; #{$defaultFloat}: -1px; background: #fff; background: rgba(#fff,0.95); list-style: none; margin: 0; padding: 0; border: 1px solid darken($white, 20%); border-top: none; min-width: 100%; z-index: 40;

      li { width: 100%; cursor: pointer; padding: 0; min-height: 18px; line-height: 18px; margin: 0; white-space: nowrap; list-style: none;
        a, button { display: block; color: #555; font-size: ms(0) - 1; font-weight: $bodyFontWeight; padding: 6px 14px; text-align: $defaultFloat; }
        button { width: 100%; border: inherit; background: inherit; font-family: inherit; margin: inherit; -webkit-font-smoothing: $fontSmoothing; }
        &:hover, &:focus { background-color: lighten($mainColor, 45%); color: #222; }
        &.divider { min-height: 0; padding: 0; height: 1px; margin: 4px 0; background: darken($white, 7%); }
      }
    }

    &.up>ul { border-top: 1px solid darken($white, 20%); border-bottom: none; }

    ul.no-hover.show-dropdown { display: block !important; }
    &:hover {
      &>ul.no-hover {
        display: none;
      }
    }

    /* Split Dropdown Buttons */
    &.split { padding: 0; position: relative;

      &:after { display: none; }
      &:hover, &:focus { background-color: $mainColor; }
      &.alert:hover, &.alert:focus { background-color: $alertColor; }
      &.success:hover, &.success:focus { background-color: $successColor; }
      &.secondary:hover, &.secondary:focus { background-color: $secondaryColor; }

      /* Sizes */
      &>a { color: $white; display: block; padding: $btnBase (($btnBase * 2.5) * 2) ($btnBase + 1) ($btnBase * 2); padding-#{$defaultFloat}: $btnBase * 2; padding-#{$defaultOpposite}: ($btnBase * 2.5) * 2; @include single-transition(background-color, .15s, ease-in-out);
        &:hover, &:focus { background-color: darken($mainColor, 10%); @include box-shadow(0 1px 0 $shinyEdge inset); }
      }
      &.large>a { padding: $btnLargeBase (($btnLargeBase * 2.5) * 2) ($btnLargeBase + 1) ($btnLargeBase * 2); padding-#{$defaultFloat}: $btnLargeBase * 2; padding-#{$defaultOpposite}: ($btnLargeBase * 2.5) * 2; }
      &.small>a { padding: $btnSmallBase (($btnSmallBase * 2.5) * 2) ($btnSmallBase + 1) ($btnSmallBase * 2); padding-#{$defaultFloat}: $btnSmallBase * 2; padding-#{$defaultOpposite}: ($btnSmallBase * 2.5) * 2; }
      &.tiny>a { padding: $btnTinyBase (($btnTinyBase * 2.5) * 2) ($btnTinyBase + 1) ($btnTinyBase * 2); padding-#{$defaultFloat}: $btnTinyBase * 2; padding-#{$defaultOpposite}: ($btnTinyBase * 2.5) * 2; }

      /* Triangle Spans */
      &>span { background-color: $mainColor; position: absolute; #{$defaultOpposite}: 0; top: 0; height: 100%; width: $btnBase * 3; border-#{$defaultFloat}: 1px solid darken($mainColor, 15%); @include box-shadow(1px 1px 0 $shinyEdge inset); @include single-transition(background-color, .15s, ease-in-out);
        &:hover, &:focus { background-color: darken($mainColor, 10%); }
        &:after { @include cssTriangle(6px, #fff, top); position: absolute; top: 50%; #{$defaultFloat}: 50%; margin-#{$defaultFloat}: -6px; margin-top: -2px; }
      }
      &.secondary>span:after { @include cssTriangle(6px, darken(($secondaryColor), 80%), top); }

      &.large span { width: $btnLargeBase * 3; }
      &.small span { width: $btnSmallBase * 3; }
      &.tiny span { width: $btnTinyBase * 3; }

      &.large span:after { @include cssTriangle(7px, #fff, top); margin-top: -3px; margin-#{$defaultFloat}: -7px; }
      &.small span:after { @include cssTriangle(4px, #fff, top); margin-top: -1px; margin-#{$defaultFloat}: -4px; }
      &.tiny span:after { @include cssTriangle(3px, #fff, top); margin-top: -1px; margin-#{$defaultFloat}: -3px; }

      /* Colors */
      &.alert>span { background-color: $alertColor; border-#{$defaultFloat}-color: darken($alertColor, 15%); }
      &.success>span { background-color: $successColor; border-#{$defaultFloat}-color: darken($successColor, 15%); }
      &.secondary>span { background-color: $secondaryColor; border-#{$defaultFloat}-color: darken($secondaryColor, 15%); }
      &.secondary>a { color: darken(($secondaryColor), 80%); }

      &.alert>a:hover, &.alert>span:hover, &.alert>a:focus, &.alert>span:focus { background-color: darken($alertColor, 10%); }
      &.success>a:hover, &.success>span:hover, &.success>a:focus, &.success>span:focus { background-color: darken($successColor, 10%); }
      &.secondary>a:hover, &.secondary>span:hover, &.secondary>a:focus, &.secondary>span:focus { background-color: darken($secondaryColor, 10%); }
    }
  }

  /* Button Groups ---------------------- */

  ul.button-group { list-style: none; padding: 0; margin: 0 0 12px; @include clearfix();

    li { padding: 0; margin: 0 0 0 -1px; float: $defaultFloat;
      &:first-child { margin-#{$defaultFloat}: 0; }
    }

    &.radius li {
      .button, .button.radius, .button-rounded { @include border-radius(0px); }
      &:first-child {
        .button, .button.radius { @include border-corner-radius(top, $defaultFloat, $btnRadius); @include border-corner-radius(bottom, $defaultFloat, $btnRadius); }
        .button.rounded { @include border-corner-radius(top, $defaultFloat, 1000px); @include border-corner-radius(bottom, $defaultFloat, 1000px); }
      }
      &:last-child {
        .button, .button.radius { @include border-corner-radius(top, $defaultOpposite, $btnRadius); @include border-corner-radius(bottom, $defaultOpposite, $btnRadius); }
        .button.rounded { @include border-corner-radius(top, $defaultOpposite, 1000px); @include border-corner-radius(bottom, $defaultOpposite, 1000px); }
      }
    }

    &.even {
      .button { width: 100%; }
      &.two-up li { width: 50%; }
      &.three-up li { width: 33.3%; }
      &.three-up li:first-child { width: 33.4%; }
      &.four-up li { width: 25%; }
      &.five-up li { width: 20%; }
    }
  }

  div.button-bar { overflow: hidden;
    ul.button-group { float: $defaultFloat; margin-#{$defaultOpposite}: 8px; }
    ul.button-group:last-child { margin-#{$defaultFloat}: 0; }
  }