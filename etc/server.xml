<?xml version='1.0' encoding='utf-8'?>
<!-- This is the server.xml template for development instances -->

<!--
	Licensed to the Apache Software Foundation (ASF) under one or more
	contributor license agreements.	See the NOTICE file distributed with
	this work for additional information regarding copyright ownership.
	The ASF licenses this file to You under the Apache License, Version 2.0
	(the "License"); you may not use this file except in compliance with
	the License. You may obtain a copy of the License at
	http://www.apache.org/licenses/LICENSE-2.0
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	limitations under the License.
	See the License for the specific language governing permissions and
-->
<!-- Note:  A "Server" is not itself a "Container", so you may not
     define subcomponents such as "Valves" at this level.
     Documentation at /docs/config/server.html
 -->
<Server port="@SHUTDOWN_PORT@" shutdown="SHUTDOWN">
	<!-- Security listener. Documentation at /docs/config/listeners.html
	<Listener className="org.apache.catalina.security.SecurityListener" />
	-->
	<!--APR library loader. Documentation at /docs/apr.html -->
	<Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="on" />
	<!-- Prevent memory leaks due to use of particular java/javax APIs-->
	<Listener className="org.apache.catalina.core.JreMemoryLeakPreventionListener" />
	<Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />
	<Listener className="org.apache.catalina.core.ThreadLocalLeakPreventionListener" />
	
	<!-- Global JNDI resources
		Documentation at /docs/jndi-resources-howto.html
	-->
	<!--
	  <GlobalNamingResources>
	  </GlobalNamingResources>
	-->
	<!-- A "Service" is a collection of one or more "Connectors" that share
		a single "Container" Note:  A "Service" is not itself a "Container",
		so you may not define subcomponents such as "Valves" at this level.
		Documentation at /docs/config/service.html
	-->
	<Service name="Catalina">
		<!--The connectors can use a shared executor, you can define one or more named thread pools-->
		<!--
		<Executor name="tomcatThreadPool" namePrefix="catalina-exec-"
			maxThreads="150" minSpareThreads="4"/> 
		-->
		
		<!-- A "Connector" represents an endpoint by which requests are received
			and responses are returned. Documentation at :
			Java HTTP Connector: /docs/config/http.html (blocking & non-blocking)
			Java AJP Connector: /docs/config/ajp.html
			APR (HTTP/AJP) Connector: /docs/apr.html
			Define a non-SSL HTTP/1.1 Connector on port @TOMCAT_HTTP_PORT@
		-->
		<Connector
			port="@TOMCAT_HTTP_PORT@"
			protocol="HTTP/1.1"
			connectionTimeout="20000"
			compression="on"
			compressionMinSize="2048"
			noCompressionUserAgents="gozilla, traviata"
			compressableMimeType="text/html,text/xml,text/plain,text/javascript,application/javascript,text/css"
		/>
		<!-- A "Connector" using the shared thread pool-->
		<!--
		<Connector
			executor="tomcatThreadPool"
			port="8080" protocol="HTTP/1.1"
			connectionTimeout="20000"
			redirectPort="8443" 
		/>
		-->
		
		<!-- Define an AJP 1.3 Connector on port 8009 -->
		<!--
		<Connector port="8009" protocol="AJP/1.3" redirectPort="8443" />
		-->
		
		<!-- An Engine represents the entry point (within Catalina) that processes
			every request.	The Engine implementation for Tomcat stand alone
			analyzes the HTTP headers included with the request, and passes them
			on to the appropriate Host (virtual host).
			Documentation at /docs/config/engine.html -->
		
		<!-- You should set jvmRoute to support load-balancing via AJP ie :
		<Engine name="Catalina" defaultHost="localhost" jvmRoute="jvm1">
		-->
		<Engine name="Catalina" defaultHost="localhost">
			
			<!--For clustering, please take a look at documentation at:
				/docs/cluster-howto.html	(simple how to)
				/docs/config/cluster.html (reference documentation) -->
			<!--
			<Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster"/>
			-->
			
			<!-- Use the LockOutRealm to prevent attempts to guess user passwords via a brute-force attack -->
			<Host
				name="localhost"
				appBase="webapps"
				unpackWARs="true" 
				autoDeploy="false"
				deployOnStartup="false"
			>
				<!-- SingleSignOn valve, share authentication between web applications
					Documentation at: /docs/config/valve.html -->
				<!--
				<Valve className="org.apache.catalina.authenticator.SingleSignOn" />
				-->
				<Context path="" docBase="@TOMCAT_HOME@/webapps/scobolsolo">
					<Valve className="org.apache.catalina.valves.rewrite.RewriteValve" />
					<Manager pathname="" />
					<Resource
						name="ScobolSoloDataSource"
						auth="Container"
						type="javax.sql.DataSource"
						maxTotal="25" maxIdle="25"
						maxWaitMillis="10000"
						driverClassName="org.postgresql.Driver"
						url="jdbc:postgresql://127.0.0.1:5432/scobolsolo"
						username="@DATABASE_USERNAME@" password="@DATABASE_PASSWORD@"
						removeAbandoned="true"
						logAbandoned="true"
						validationQuery="select 1"
					/>
					<Realm className="org.apache.catalina.realm.LockOutRealm">
						<Realm
							className="com.scobolsolo.security.BCryptDataSourceRealm"
							dataSourceName="ScobolSoloDataSource"
							userTable="Web_Login" userNameCol="username" userCredCol="password_hash"
							userRoleTable="Web_Roles" roleNameCol="role" localDataSource="true"
						/>
					</Realm>
					<ResourceLink global="ScobolSoloDataSource" name="ScobolSoloDataSource" type="javax.sql.DataSource" />
				</Context>
				
				<!-- Access log processes all example.
					Documentation at: /docs/config/valve.html -->
				<Valve
					className="org.apache.catalina.valves.AccessLogValve"
					directory="logs"
					prefix="localhost_access_log" suffix=".txt"
					pattern="%h %l %u %t &quot;%r&quot; %s %b &quot;%{Referer}i&quot; &quot;%{User-Agent}i&quot;" 
				/>
			</Host>
		</Engine>
	</Service>
</Server>
